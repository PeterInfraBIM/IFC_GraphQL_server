
interface Addressable {
	type: String!
	globalId: ID!
}

interface IfcRoot {
	name: String
	description: String
	ownerHistoryRef: Ref
	ownerHistory: OwnerHistory
}

interface IfcObjectDefinition {
	isDecomposedByRef: [Ref!]
	isDecomposedBy: [RelAggregates!]
	isDecomposedByDir: [IfcObjectDefinition!]
	decomposesRef: [Ref!]
	decomposes: [RelAggregates!]
	decomposesDir: [IfcObjectDefinition!]
}

interface IfcObject {
	objectType: String
	isDefinedByRef: [Ref!]
	isDefinedBy: [RelDefinesByProperties!]
	isDefinedByDir: [PropertySet!]
}

interface IfcProduct {
	objectPlacement: LocalPlacement
	objectPlacements: [LocalPlacement!]
	representation: ProductRepresentation
}

interface IfcElement {
	tag: String
	fillsVoidsRef: [Ref!]
	fillsVoids: [RelFillsElement!]
	connectedToRef: [Ref!]
	connectedFromRef: [Ref!]
	hasOpeningsRef: [Ref!]
	hasOpenings: [RelVoidsElement!]
	hasAssociationsRef: [Ref!]
	hasAssociations: [IfcRelAssociates!]
	providesBoundariesRef: [Ref!]
	providesBoundaries: [RelSpaceBoundary]
	containedInStructureRef: [Ref!]
}

interface IfcFeatureElementSubtraction {
	voidsElementsRef: [Ref!]
	voidsElements: [RelVoidsElement]
}

interface IfcRelAssociates {
	relatedObjectsRef: [Ref!]
}

interface IfcSpatialStructureElement {
	longName: String
	compositionType: IfcElementCompositionEnum
	containsElementsRef: [Ref!]
	containsElements: [RelContainedInSpatialStructure!]
	containsElementsDir: [IfcProduct!]
}

interface IfcTypeObject {
	applicableOccurrence: String
	hasPropertySetsRef: [Ref!]
	hasPropertySets: [IfcPropertySetDefinition]
	objectTypeOfRef: [Ref!]
	objectTypeOf: [RelDefinesByType]
	objectTypeOfDir: [IfcObject]
}

interface IfcTypeProduct {
	representationMaps: [RepresentationMap!]
	tag: String
}

interface IfcPropertyDefinition {
	hasAssociationsRef: [Ref!]
	hasAssociations: [RelAssociates!]
}

interface IfcPropertySetDefinition {
	propertyDefinitionOfRef: [Ref!]
	propertyDefinitionOf: [RelDefinesByProperties!]
	definesTypeRef: [Ref!]
	definesType: [IfcTypeObject!]
}
